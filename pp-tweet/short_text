How we brainstorm, build, and ship within 8 hours at Oscar
Co-authored by Gabe Schindler, Senior Product Designer, and Lukasz Mosakowski, Group Product Manager.
Building products at Oscar is an ever-changing process. Some days we’re testing how doctors virtually treat patients, other times we’re bug squashing and sprint planning. While our day-to-day is often an exciting challenge, we sometimes mix it up in search of fresh approaches to solving problems in health care.
Every two months, the Find Care team — a group focused on guiding members to high-value doctors in Oscar’s network by building features like search and scheduling — blocks off a Friday to hack. We devote eight uninterrupted hours to building a feature from start to finish, shipping the product to Oscar users at the end of the day. Mini-hackathons are not to be confused with Oscar’s official hackathon, as they are initiated by individual teams, not the greater organization. As a break from our regular cadence, mini-hackathons stimulate creativity, build team rapport, and develop vital collaboration skills. These sessions have been so effective that we’ve compiled a rough guide for other teams interested in running their own mini-hackathon, using the real-world example of in-app appointment-management, as seen in the image below.
1. Identify a problem
So, what should you build? While creating something entirely new is an exciting venture, we’ve found that, given the time constraints of a mini-hackathon, iterating on existing features is best; it imposes healthy constraints, maintains product focus, and easily ties into a team’s long-term goals.
In the lead-up to our latest hack day, we received significant feedback that Oscar members were having difficulty accessing appointments they’d scheduled. They were booking and cancelling appointments through the Oscar app, but there was no centralized repository to house all of this information. We wanted to to fix this.
2. Explore the problemAfter identifying a potential problem, we unpacked it some more. During the exploration phase, we began with a list of questions framed around the user, modeled after Giff Constable’s assumptions exercise. Our answers ensure the team understands the landscape of the problem before jumping into problem-solving.Who is the target user?